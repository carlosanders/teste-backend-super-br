# pulled from ubuntu
FROM ubuntu:22.04 as base

MAINTAINER Advocacia-Geral da União <supp@agu.gov.br>

# instalacao dos pacotes basicos
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y tzdata && apt-get install -y --allow-unauthenticated \
	ubuntu-release-upgrader-core python3-distupgrade apt-utils supervisor wget vim curl nano git unzip jq apt-transport-https ca-certificates software-properties-common zlib1g-dev libxml2-dev ntp \
	acl nginx graphviz tesseract-ocr-por imagemagick poppler-utils clamav libaio1 ghostscript \
	openjdk-8-jre-headless memcached openssh-client sshpass

RUN DEBIAN_FRONTEND=noninteractive add-apt-repository ppa:ondrej/php -y && apt-get update && apt-get install -y --allow-unauthenticated \
	php8.1 php8.1-fpm php8.1-cli php8.1-common php8.1-dev php8.1-ldap \
    php8.1-curl php8.1-soap php8.1-gd php8.1-mbstring php8.1-intl php8.1-xml php8.1-zip  php8.1-imap \
    php8.1-bcmath php8.1-mysql php8.1-pgsql php8.1-apcu php8.1-amqp php8.1-memcached php8.1-igbinary php8.1-redis php8.1-ssh2

RUN DEBIAN_FRONTEND=noninteractive apt-get remove apache2

RUN update-alternatives --set php /usr/bin/php8.1;
RUN update-alternatives --set phpize /usr/bin/phpize8.1;
RUN update-alternatives --set php-config /usr/bin/php-config8.1;
RUN update-alternatives --set phar /usr/bin/phar8.1;
RUN update-alternatives --set phar.phar /usr/bin/phar.phar8.1;

# oracle
COPY docker/oracle/oracle-instantclient12.1-basic_12.1.0.2.0-2_amd64.deb /tmp
COPY docker/oracle/oracle-instantclient12.1-devel_12.1.0.2.0-2_amd64.deb /tmp
RUN dpkg -i /tmp/oracle-instantclient12.1-basic_12.1.0.2.0-2_amd64.deb
RUN dpkg -i /tmp/oracle-instantclient12.1-devel_12.1.0.2.0-2_amd64.deb
RUN echo /usr/lib/oracle/12.1/client64/lib > /etc/ld.so.conf.d/oci.conf
RUN ldconfig
RUN echo 'instantclient,/usr/lib/oracle/12.1/client64/lib' | pecl install oci8-3.2.1
RUN ln -s /etc/php/8.1/mods-available/oci8.ini /etc/php/8.1/cli/conf.d/oci8.ini
RUN ln -s /etc/php/8.1/mods-available/oci8.ini /etc/php/8.1/fpm/conf.d/oci8.ini

# ms fonts
RUN echo "ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true" | debconf-set-selections
RUN apt-get install -y --no-install-recommends fontconfig ttf-mscorefonts-installer libxrender1 xfonts-75dpi xfonts-base
RUN fc-cache -f -v

# clamav
RUN freshclam

# pdf
COPY docker/wkhtmltopdf/wkhtmltox_0.12.6.1-2.jammy_amd64.deb /tmp
RUN dpkg -i /tmp/wkhtmltox_0.12.6.1-2.jammy_amd64.deb
RUN apt-get install -f -y
RUN ln -s /usr/local/bin/wkhtmltopdf /usr/bin
RUN ln -s /usr/local/bin/wkhtmltoimage /usr/bin

# ldap
RUN echo "extension=ldap.so" >> /etc/php/8.1/cli/php.ini

# configurações
COPY /docker/prod/php-fpm.ini /etc/php/8.1/fpm/php.ini
COPY /docker/prod/php-cli.ini /etc/php/8.1/cli/php.ini
COPY /docker/prod/default.conf /etc/nginx/conf.d/default.conf
COPY /docker/prod/nginx.conf /etc/nginx/nginx.conf
COPY /docker/prod/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY /docker/java/supp-signer-1.9.jar /usr/local/bin/supp-signer-1.9.jar
COPY /docker/prod/imagemagick-policy.xml /etc/ImageMagick-6/policy.xml
COPY /docker/prod/www.conf /etc/php/8.1/fpm/pool.d/www.conf

# new relic
RUN DEBIAN_FRONTEND=noninteractive echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list && \
    wget -O- https://download.newrelic.com/548C16BF.gpg | apt-key add -  && \
    apt-get update  && \
    DEBIAN_FRONTEND=noninteractive apt-get -y install newrelic-php5 && \
    NR_INSTALL_SILENT=1 newrelic-install install && \
    rm -rf /etc/php/8.1/cli/conf.d/newrelic.ini && \
    rm -rf /etc/php/8.1/fpm/conf.d/newrelic.ini

RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

FROM base as prod

ENV APP_ENV=prod
WORKDIR /var/www/html

# install composer
RUN curl -sS https://getcomposer.org/installer | php -- --version=2.3.10 --install-dir=/usr/local/bin --filename=composer
RUN chmod +x /usr/local/bin/composer
RUN composer config --global process-timeout 2000

# copy source files
COPY --chown=www-data:www-data . /var/www/html/
COPY /docker/prod/load-env.sh /var/www/html/load-env.sh
COPY /docker/prod/workers-control.sh /var/www/html/workers-control.sh
COPY /docker/prod/crontab.txt /etc/crontab.txt

RUN chmod +x /var/www/html/load-env.sh
RUN chmod +x /var/www/html/workers-control.sh
RUN chmod 0644 /etc/crontab.txt

ENV SECRET_KEY=config/jwt/private.pem
ENV PUBLIC_KEY=config/jwt/public.pem
ENV JWT_PASSPHRASE=9fc87a4342s3gjfs3423381020d5e5356

RUN make generate-jwt-keys

RUN composer install --no-scripts --no-interaction --optimize-autoloader --classmap-authoritative

RUN rm -rf src/DataFixtures/AppFixtures.php
RUN rm -rf /var/www/html/var/cache
RUN rm -rf /var/www/html/var/log
RUN rm -rf /var/www/html/src/DataFixtures/AppFixtures.php

# OCI8Connection
COPY /docker/oracle/Connection.php vendor/doctrine/dbal/src/Driver/OCI8/Connection.php

EXPOSE 8000

ENTRYPOINT ["/var/www/html/docker/prod/docker-entrypoint.sh"]
